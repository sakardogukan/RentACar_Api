{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "rentacar_api",
    "description": "Node.Js | Express.Js | Mongoose - MongoDB SQL | Authorization And Permissions with Simple Token | Password Crypto | Documentation: Swagger/Redoc/Json | Logging",
    "termsOfservices": "http://localhost",
    "contact": {
      "name": "rentacar_api",
      "email": "sakardogukan@gmail.com"
    },
    "license": {
      "name": "ISC"
    }
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "SimpleToken Auth * Example: <b>Token <i>...tokenKey...<i></b>"
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Login with username (or email) and password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "aA*123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout",
        "description": "Delete token key.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/verify": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Email Authentication",
        "description": "\r  <p>id: \"...userId...\"</p>\r  <p>verifyCode: \"...passwordEncrypt(email)...\"</p>\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "verifyCode",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "description": "\r  You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r   <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r   <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "aA*123456"
                },
                "email": {
                  "type": "string",
                  "example": "admin@test.com"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                },
                "isAdmin": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Read a single user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "aA*123456"
                },
                "email": {
                  "type": "string",
                  "example": "admin@test.com"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                },
                "isAdmin": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "aA*123456"
                },
                "email": {
                  "type": "string",
                  "example": "admin@test.com"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                },
                "isAdmin": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/cars/": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "List Cars",
        "description": "\r  You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r   <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r   <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Create Car",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "plateNumber": {
                  "type": "string",
                  "example": "34ABC123"
                },
                "brand": {
                  "type": "string",
                  "example": "Ford"
                },
                "model": {
                  "type": "string",
                  "example": "Focus"
                },
                "year": {
                  "type": "number",
                  "example": 2020
                },
                "isAutomatic": {
                  "type": "boolean",
                  "example": true
                },
                "pricePerDay": {
                  "type": "number",
                  "example": 249.99
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Read a single Car",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Cars"
        ],
        "summary": "Update Car",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "plateNumber": {
                  "type": "string",
                  "example": "34ABC123"
                },
                "brand": {
                  "type": "string",
                  "example": "Ford"
                },
                "model": {
                  "type": "string",
                  "example": "Focus"
                },
                "year": {
                  "type": "number",
                  "example": 2020
                },
                "isAutomatic": {
                  "type": "boolean",
                  "example": true
                },
                "pricePerDay": {
                  "type": "number",
                  "example": 249.99
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Cars"
        ],
        "summary": "Delete a Car",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Cars"
        ],
        "summary": "Update Car",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "plateNumber": {
                  "type": "string",
                  "example": "34ABC123"
                },
                "brand": {
                  "type": "string",
                  "example": "Ford"
                },
                "model": {
                  "type": "string",
                  "example": "Focus"
                },
                "year": {
                  "type": "number",
                  "example": 2020
                },
                "isAutomatic": {
                  "type": "boolean",
                  "example": true
                },
                "pricePerDay": {
                  "type": "number",
                  "example": 249.99
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/reservations/": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "List Reservations",
        "description": "\r  You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r   <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r   <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r   <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Create Reservation",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "65343222b67e9681f937f001"
                },
                "carId": {
                  "type": "string",
                  "example": "65352f518a9ea121b1ca5001"
                },
                "startDate": {
                  "type": "string",
                  "example": "2023-10-10"
                },
                "endDate": {
                  "type": "string",
                  "example": "2023-10-16"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/reservations/{id}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Read a single Reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update Reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "65343222b67e9681f937f001"
                },
                "carId": {
                  "type": "string",
                  "example": "65352f518a9ea121b1ca5001"
                },
                "startDate": {
                  "type": "string",
                  "example": "2023-10-10"
                },
                "endDate": {
                  "type": "string",
                  "example": "2023-10-16"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Reservations"
        ],
        "summary": "Delete a Reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update Reservation",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "65343222b67e9681f937f001"
                },
                "carId": {
                  "type": "string",
                  "example": "65352f518a9ea121b1ca5001"
                },
                "startDate": {
                  "type": "string",
                  "example": "2023-10-10"
                },
                "endDate": {
                  "type": "string",
                  "example": "2023-10-16"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    }
  },
  "definitions": {
    "Models": {
      "type": "object",
      "properties": {
        "User": {
          "type": "object",
          "properties": {
            "username": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                },
                "unique": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "password": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                },
                "unique": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "emailVerified": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "default": {
                  "type": "boolean",
                  "example": false
                }
              }
            },
            "firstName": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "lastName": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "isActive": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "default": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "isAdmin": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "default": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        },
        "Car": {
          "type": "object",
          "properties": {
            "plateNumber": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                },
                "unique": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "brand": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "model": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "trim": {
                  "type": "boolean",
                  "example": true
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "year": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                },
                "min": {
                  "type": "number",
                  "example": 2000
                }
              }
            },
            "isAutomatic": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "default": {
                  "type": "boolean",
                  "example": false
                }
              }
            },
            "pricePerDay": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "isPublish": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "default": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "images": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "default": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              }
            },
            "createdId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "ref": {
                  "type": "string",
                  "example": "User"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "updatedId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "ref": {
                  "type": "string",
                  "example": "User"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        },
        "Reservation": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "ref": {
                  "type": "string",
                  "example": "User"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "carId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "ref": {
                  "type": "string",
                  "example": "Car"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "startDate": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "endDate": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "function"
                },
                "required": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Token": true
    }
  ]
}